% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepinteractivetesting.R
\name{prepinteractivetesting}
\alias{prepinteractivetesting}
\title{Prepare for running content of testthat tests interactively}
\usage{
prepinteractivetesting(path = ".", ..., install = TRUE, build = TRUE)
}
\arguments{
\item{path}{Directory of package. If this fails to get a package name, the it will try using path as the package name.}
}
\description{
This installs a local package using \code{devtools::install()} then attaches the namespace of the package and \code{testthat}.
I'm not sure why this led to different behaviour than \code{devtools::test()}, but I think \code{devtools::test()} may compile C++ without the \code{NDEBUG} flag so that any assertions in the C++ code get thrown and cause R to abort.
}
\details{
Uses \code{attach()}. Perhaps I could use something like \code{devtools::load_all(compile = TRUE)}.
I suspect a difficulty with repeatability is that the C++ shared library for the package (a \code{.so} file) is automatically only regenerated if the source files change. So the issue is that behaviour of the C++ asserts depends on whether the most recent compiling was by \code{devtools::test()} or something else.
}
